package com.smart.web.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.smart.web.service.LogRegService;
import com.smart.web.utils.PhoneFormatCheckUtils;

@Controller
@RequestMapping("loginReg")
public class LogRegController {
	
	@Autowired
	private LogRegService logRegService;
	
	@RequestMapping("login")
	public String login() {
		return "login";
	}
	
	@RequestMapping("regist")
	public String regist() {
		return "regist";
	}
	
	@RequestMapping("userCheck")
	@ResponseBody
	public Map<String, String> userCheck(HttpServletRequest request) {
		Map<String,String> reMap = new HashMap<String,String>();
		List<String> userNameList = logRegService.queryUserName();
		String userName = request.getParameter("userName");
		String regEx = "[ _`~!@#$%^&*()+=|{}':;',\\[\\].<>/?~！@#￥%……&*（）——+|{}【】‘；：”“’。，、？]|\n|\r|\t";
        Pattern p = Pattern.compile(regEx);
        Matcher m = p.matcher(userName);
		if(userName=="") {
			reMap.put("mes", "<font color='red'>用户名不能为空!</font>");
		}else if(m.find()) {
			reMap.put("mes", "<font color='red'>用户名不能存在特殊字符!</font>");
		}else if(userNameList.contains(userName)){
			reMap.put("mes", "<font color='red'>该用户名已经存在，请重新输入!</font>");
		}else {
			reMap.put("mes", "<font color='green'>恭喜您，该帐号可以使用!</font>");
		}
		return reMap;
	}
	
	@RequestMapping("/phoneCheck")
	@ResponseBody
	public Map<String, String> phoneCheck(HttpServletRequest request) {
		Map<String,String> reMap = new HashMap<String,String>();
		String phone1 = request.getParameter("phone");
		List<String> phoneList = logRegService.queryPhone();
		if(phone1 =="") {
			reMap.put("mes", "<font color='red'>手机号码不能为空!</font>");
		}else if(phoneList.contains(phone1)) {
			reMap.put("mes", "<font color='red'>手机号码已经存在，请直接登录!</font>");
		}else if(!PhoneFormatCheckUtils.isChinaPhoneLegal(phone1)) {
			reMap.put("mes", "<font color='red'>手机号码格式不正确，请重新输入!</font>");
		}else {
			reMap.put("mes", "yes");
		}
		return reMap;
	}
	
	@RequestMapping("/registUser")
	@ResponseBody
	public void registUser(HttpServletRequest request){
		String userName = request.getParameter("userName");
		String phone = request.getParameter("phone");
		String password = request.getParameter("password");
		logRegService.registUser(userName,phone,password);
	}
	
	/*public String sendCode(String phone,String conten,String code)throws Exception{
	       System.out.println("::::::::::::"+code);
	        HttpClient client = new HttpClient();
	        PostMethod post = new PostMethod("http://gbk.sms.webchinese.cn"); 
	        post.addRequestHeader("Content-Type","application/x-www-form-urlencoded;charset=gbk");//在头文件中设置转码
	        NameValuePair[] data ={ new NameValuePair("Uid", "用户名"),
	                new NameValuePair("Key", "8......7"),
	                new NameValuePair("smsMob",phone),
	                new NameValuePair("smsText","发送内容")};
	        post.setRequestBody(data);
	       
	        client.executeMethod(post);
	        Header[] headers = post.getResponseHeaders();
	        int statusCode = post.getStatusCode();
	        System.out.println("statusCode:"+statusCode);
	        for(Header h : headers)
	        {
	        System.out.println(h.toString());
	        }
	        String result = new String(post.getResponseBodyAsString().getBytes("gbk")); 
	        System.out.println(result); //打印返回消息状态
	        post.releaseConnection();
	        return result;
	    }*/
	}
